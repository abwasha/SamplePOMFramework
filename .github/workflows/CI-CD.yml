name: Continuous Integration to AWS instance.
run-name: Executing CI/CD by ${{github.actor}}

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Java 17 installation
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'maven'

      - name: Run tests
        run: mvn clean install

  analyse:
     name: Run security check
     runs-on: windows-latest
     permissions:
       actions: read
       contents: read
       security-events: write

     strategy:
       fail-fast: false
       matrix:
        language: ['java']

     steps:
       - name: Checkout
         uses:  actions/checkout@v3.5.3

       - name: Initialize CodeQL
         uses: github/codeql-action/init@v2
         with:
           languages: ${{matrix.language}}
        # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
       - name: Auto-build
         uses: github/codeql-action/autobuild@v2

       - name: Perform CodeQL Analysis
         uses: github/codeql-action/analyze@v2
         with:
            category: "/language:${{matrix.language}}"


  push_to_windows_ec2:
   #needs: [build]
   runs-on: ubuntu-latest
   environment: AWS_Demo
   steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clone Repo
        run: |
          git clone https://github.com/abwasha/SamplePOMFramework.git
          cd SamplePOMFramework
          echo %cd%
          mvn clean

  push_to_Linux_ec2:
    runs-on: ubuntu-latest
    environment: AWS_Demo
    steps:
        - name: Checkout
          uses: actions/checkout@v3.5.3


        - name: Copy artifacts to AWS
          uses: appleboy/scp-action@master
          with:
            host: ${{ vars.AWS_LINUX_HOST }}
            username: ${{ secrets.AWS_LINUX_USER }}
            #key: ${{ secrets.AWS_LINUX_SSH }}
            key-text: |
              -----BEGIN OPENSSH PRIVATE KEY-----
              AAABAQCBrCeqmZF76n5rA/3Xul2pwFgzPK72jMwV8QiVx2lzAyTGuFl9qcgStq7B
              iqPM1OM94BuYIeRotUbJa6Wt0Z+eqQ80swidt3SnkMihDqtzRS+wTPAyjv2cGy6m
              PjCKbPO8J31waj6Xwa7vdoVDhGFIse7CYMaqQfNBgLbdpiDKaBQtz9yVkkSrZ/kG
              gqepGeQ4ugh5UszwwoxKgMvdbvvFDvP2hlq77tN56NhjkoT7G3vTBwRt/MM/R+tg
              xOmBJFPTVP3K/N4AA1mZX1v2Of9xcoIWCqrQPOYvu83mfJVFrdfTaDRsmc5q3B7z
              OmUQMXP1IecSgjN9mQJ0/mon2mVBAAAAgQDd1Z+ArTsWYkP1nGOXtn3Wca0BLhIX
              TPhiobQgKcMkEwQi7hILGBCTzyXZK2WpeAFas+EOXrjQcytqgrVW4ZCCuUpz/7TK
              cwlOKLBp09wSWd1D4ORAdEph2AnJumraSbbZ0+hUkmGrXUqFi5RQz9Ud17YKS6Xm
              Xqakii3ceODAsQAAAIEAr/Bzp5A7eYqDX97yZc/kmm/PhiHFgGORPr07wTIn2MlM
              KucrNH7fks/wDQeMUxP7c5AHpuan2LdrTEk4lDZdpnVEYOaD0oLYUL+4gx7x/Bhf
              nhBArbfuCqKXFE9HbmcDqJRuM4lb0KH6eGweHsdMSVshpZgCHz/JNpiX25w2OAMA
              AACBALH3YyMzXbaMl7ZxvXZEaLzHOeQqB/ZNVZdoIVDDLp43m5JBnqEce2DYeykH
              hMnFUBYZKjPf/Cg3BXwCO+DMCxWzhfg1FWxmxU0elMn7M9rubZ0vdKZc/GqZDkBh
              l0KLfJ+8tkaFKHIiEKfnXstdry8OUXZsToDsr+2qDeuGEI0L
              -----END OPENSSH PRIVATE KEY-----
            source: './'
            target: '${{ secrets.LINUX_PROJECT_PATH }}'

        - name: Copy code to AWS instance
          run: |
            ssh -i ${{ secrets.LINUX_SSH_KEY }} ec2-user@${{ secrets.AWS_LINUX_HOST }} "mkdir -p ${{secrets.LINUX_PROJECT_PATH }}/project"
            scp -i ${{ secrets.LINUX_SSH_KEY }} -r ./ ec2-user@${{ secrets.AWS_LINUX_HOST }}:${{secrets.LINUX_PROJECT_PATH }}/project

        - name: Java 17 installation
          uses: actions/setup-java@v3
          with:
            distribution: 'oracle' # See 'Supported distributions' for available options
            java-version: '17'
            cache: 'maven'

        - name: Copy artifacts to AWS
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.AWS_LINUX_HOST }}
            username: ${{ secrets.LINUX_SSH_USER }}
            key: ${{ secrets.LINUX_SSH_KEY }}
            source: "./"
            target: "${{ secrets.LINUX_PROJECT_PATH }}"

        - name: SSH into AWS instance and restart
          uses: appleboy/ssh-action@v1.0.0
          with:
           host: ${{ secrets.AWS_LINUX_HOST }}
           username: ${{ secrets.LINUX_SSH_USER }}
           key: ${{ secrets.LINUX_SSH_KEY }}
           script: |
            cd ${{secrets.LINUX_PROJECT_PATH }}
            pwd
            ls
      

  cleanup:
    needs: [build]
    runs-on: windows-latest
    environment: AWS_Demo

    steps:
      - name: Clean-Up
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          password : ${{ secrets.AWS_PASSWORD }}
          scripts: |
            echo ${{vars.AWS_PROJECT_PATH}}
            cd ${{vars.AWS_PROJECT_PATH}}
            Remove-Item '${{vars.AWS_PROJECT_PATH}}\*' -Recurse