name: Continuous Integration to AWS instance.
run-name: Executing CI/CD by ${{github.actor}} on ${{github.event_name}} to perform Build>Analyse>CleanUp>Push

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Java 17 installation
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'maven'

      - name: Run tests
        run: mvn clean install

  analyse:
     name: Run security check
     runs-on: windows-latest
     permissions:
       actions: read
       contents: read
       security-events: write

     strategy:
       fail-fast: false
       matrix:
        language: ['java']

     steps:
       - name: Checkout
         uses:  actions/checkout@v3.5.3

       - name: Initialize CodeQL
         uses: github/codeql-action/init@v2
         with:
           languages: ${{matrix.language}}
        # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
       - name: Auto-build
         uses: github/codeql-action/autobuild@v2

       - name: Perform CodeQL Analysis
         uses: github/codeql-action/analyze@v2
         with:
            category: "/language:${{matrix.language}}"

  cleanup:
    needs: [ build ]
    runs-on: ubuntu-latest
    environment: AWS_Demo

    steps:
      - name: Clean-Up
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.AWS_LINUX_HOST }}
          username: ${{ vars.AWS_LINUX_USER }}
          key: ${{ secrets.LINUX_SSH_KEY }}
          script: |
            echo "******Clean-Up******"  
            pwd
            ls
            sudo rm -r *
            ls
            echo "******Clean-Up finished******"  
            repo_full_name="${{ github.repository }}"
            repo_name="${repo_full_name##*/}"
            echo "Repository Name: $repo_full_name#****#$repo_name"
            mkdir ${{ vars.LINUX_PROJECT_PATH }}/$repo_name
            pwd
            ls            
            cd ${{ vars.LINUX_PROJECT_PATH }}/$repo_name
            pwd
            ls
            

  push_to_Linux_ec2:
    needs: cleanup
    runs-on: ubuntu-latest
    environment: AWS_Demo
    steps:
      - name: Copy artifacts to AWS
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.AWS_LINUX_HOST }}
          username: ${{ vars.AWS_LINUX_USER }}
          key: ${{ secrets.LINUX_SSH_KEY }}
          source: './'
          target: '${{ vars.LINUX_PROJECT_PATH }}/SamplePOMFramework/'