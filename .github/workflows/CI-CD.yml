name: Continuous Integration to AWS instance.
run-name: Executing CI/CD by ${{github.actor}}

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Java 17 installation
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'maven'

      - name: Run tests
        run: mvn clean install

  analyse:
     name: Run security check
     runs-on: windows-latest
     permissions:
       actions: read
       contents: read
       security-events: write

     strategy:
       fail-fast: false
       matrix:
        language: ['java']

     steps:
       - name: Checkout
         uses:  actions/checkout@v3.5.3

       - name: Initialize CodeQL
         uses: github/codeql-action/init@v2
         with:
           languages: ${{matrix.language}}
        # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
       - name: Auto-build
         uses: github/codeql-action/autobuild@v2

       - name: Perform CodeQL Analysis
         uses: github/codeql-action/analyze@v2
         with:
            category: "/language:${{matrix.language}}"


  push_to_windows_ec2:
   #needs: [build]
   runs-on: ubuntu-latest
   environment: AWS_Demo
   steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3.0.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Clone Repo
        run: |
          git clone https://github.com/abwasha/SamplePOMFramework.git
          cd SamplePOMFramework
          echo %cd%
          mvn clean

  push_to_Linux_ec2:
    runs-on: ubuntu-latest
    environment: AWS_Demo
    steps:
        - name: Checkout
          uses: actions/checkout@v3.5.3

        - name: Java 17 installation
          uses: actions/setup-java@v3
          with:
            distribution: 'oracle' # See 'Supported distributions' for available options
            java-version: '17'
            cache: 'maven'

        - name: Build with Maven
          run: mvn clean install

        - name: Copy artifacts to AWS
          uses: appleboy/scp-action@v0.2.1
          with:
            host: ${{ secrets.AWS_INSTANCE_IP }}
            username: ${{ secrets.AWS_SSH_USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            source: "target/your-artifact.jar"
            target: "/path/to/remote/directory"

        - name: SSH into AWS instance and restart
          uses: appleboy/ssh-action@v0.4.0
          with:
           host: ${{ secrets.AWS_LINUX_HOST }}
           username: ${{ secrets.LINUX_SSH_USER }}
           key: ${{ secrets.LINUX_SSH_KEY }}
           script: |
            cd ${{secrets.LINUX_PROJECT_PATH }}
            sudo mkdir abdul
            cd abdul
            pwd
            ls
      

  cleanup:
    needs: [build]
    runs-on: windows-latest
    environment: AWS_Demo

    steps:
      - name: Clean-Up
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          password : ${{ secrets.AWS_PASSWORD }}
          scripts: |
            echo ${{vars.AWS_PROJECT_PATH}}
            cd ${{vars.AWS_PROJECT_PATH}}
            Remove-Item '${{vars.AWS_PROJECT_PATH}}\*' -Recurse